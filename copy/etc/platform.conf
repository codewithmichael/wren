#!/bin/sh
#
# NAME
#
#   platform.conf
#
# DESCRIPTION
#
#   Default platform-level definitions. These values describe things like what
#   file system(s) to use, common file name extensions, default image file
#   names, and file system size increments and tolerances.
#
# AUTHOR
#
#   Originally written by Michael Spencer.
#   Maintained by the Wren project developers.
#
#
# The Wren project; Copyright 2013-2015 the Wren project developers.
# See the COPYRIGHT file in the top-level directory of this distribution
# for individual attributions.
#
# This file is part of the Wren project. It is subject to the license terms
# in the LICENSE file found in the top-level directory of this distribution.
# No part of the Wren project, including this file, may be copied, modified,
# propagated, or distributed except according to the terms contained in the
# LICENSE file.
#
# This program comes with ABSOLUTELY NO WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# LICENSE file found in the top-level directory of this distribution for
# more details.
#

# Common file system types
PLATFORM_FILESYSTEM_UNION=overlayfs
PLATFORM_FILESYSTEM_READONLY=squashfs
PLATFORM_FILESYSTEM_READWRITE=ext2
PLATFORM_FILESYSTEM_READWRITE_JOURNALED=ext3
PLATFORM_FILESYSTEM_READWRITE_VOLUME=btrfs

# Common file name extensions
PLATFORM_EXTENSION_READONLY=.sfs
PLATFORM_EXTENSION_READWRITE=.2fs
PLATFORM_EXTENSION_READWRITE_JOURNALED=.3fs
PLATFORM_EXTENSION_READWRITE_VOLUME=.btrfs

# Default system image file names (typically stored on the boot device)
PLATFORM_IMAGE_KERNEL=vmlinuz
PLATFORM_IMAGE_INITRD=initrd.img
PLATFORM_IMAGE_ROOT=root$PLATFORM_EXTENSION_READONLY
PLATFORM_IMAGE_PLATFORM=platform$PLATFORM_EXTENSION_READONLY
PLATFORM_IMAGE_SAVE=save$PLATFORM_EXTENSION_READWRITE

# Default in-memory (active save data) volume image file
PLATFORM_IMAGE_VOLUME_ACTIVE=active$PLATFORM_EXTENSION_READWRITE_VOLUME

# Btrfs-specific mount options used to mount the active volume image
PLATFORM_IMAGE_VOLUME_ACTIVE_MOUNT_OPTIONS=commit=5,notreelog,nobarrier,flushoncommit,compress=lzo

# Default save name to use in case one is not defined by the user. This value is
# used to define the directory path in which to store device-user-specific
# content.
PLATFORM_DEFAULT_SAVE=save

# Default new save image size in bytes - Default 1 GB
PLATFORM_IMAGE_SAVE_SIZE=$((1024*1024*1024))

# Incremental size increase to apply to the save file when there is
# insufficient space to store the current save data - Default 1 GB
PLATFORM_IMAGE_SAVE_SIZE_INCREMENT=$((1024*1024*1024))

# If data to be stored gets within this range of the current save
# image size, the image will be expanded before adding more content.
# This should be big enough, at a minimum, to store the partition
# meta data - Default 256 MB
PLATFORM_IMAGE_SAVE_RESIZE_TOLERANCE=$((1024*1024*256))

# Default active save data volume size. This is the guaranteed in-memory
# working data storage size for the system. It is dangerous to set this to a
# larger size than the target machine has in RAM. A memory overflow and
# potential system deadlock will occur if the data store attempts to use more
# RAM than the machine has available. This value is only a starting point, and
# will automatically increase to match the size of a loaded save file. Note
# that this value should leave enough assumed RAM overhead for the system to
# operate effectively - Default 1 GB
PLATFORM_IMAGE_VOLUME_ACTIVE_SIZE_DEFAULT=$((1024*1024*1024))

# Incremental size increase to apply to the active save data volume size when
# there is insufficient space to store the current save data - Default 1 GB
PLATFORM_IMAGE_VOLUME_ACTIVE_SIZE_INCREMENT=$((1024*1024*1024))

# If data to be stored gets within this range of the current active save data
# volume size, the volume will be expanded. This should be big enough, at a
# minimum, to store the partition meta data - Default 512 MB
PLATFORM_IMAGE_VOLUME_ACTIVE_RESIZE_TOLERANCE=$((1024*1024*512))


#######################################
### !!! DEPRECATED !!!
### LEGACY VALUES FOR VERSIONS 0.1.x
### WILL BE REVOVED IN FUTURE VERSIONS
#######################################

# (DEPRECATED)
# Default LVM in-memory image file names
PLATFORM_IMAGE_LVM_SAVE=save.lvm
PLATFORM_IMAGE_LVM_SNAPSHOT=snapshot.lvm

# (DEPRECATED)
# Default LVM save storage size. This is the guaranteed in-memory working
# data storage size for the system. It is dangerous to set this to a larger
# size than the target machine has in RAM. A memory overflow and potential
# system deadlock will occur if the LVM store attempts to use more RAM than
# the machine has available. This value is only a starting point, and will
# automatically increase to match the size of a loaded save file. Note that
# this value should leave enough assumed RAM overhead for the system to
# operate effectively - Default 1 GB
PLATFORM_IMAGE_LVM_SAVE_SIZE=$((1024*1024*1024))

# (DEPRECATED)
# Incremental size increase to apply to the LVM save storage size when there
# is insufficient space to store the current save data - Default 1 GB
PLATFORM_IMAGE_LVM_SAVE_SIZE_INCREMENT=$((1024*1024*1024))

# (DEPRECATED)
# If data to be stored gets within this range of the current LVM save storage
# image size, the LVM save storage will be expanded. This should be big enough,
# at a minimum, to store the partition meta data - Default 512 MB
PLATFORM_IMAGE_LVM_SAVE_RESIZE_TOLERANCE=$((1024*1024*512))
